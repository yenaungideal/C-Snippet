<?xml version="1.0" encoding="utf-8"?>

<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">

  <CodeSnippet Format="1.0.0">

    <Header>

      <Title>Insert Or Update Statement</Title>

      <Shortcut>myinsertUpdate</Shortcut>

      <Description>Code snippet insert or update statement.</Description>

      <Author>yn</Author>

      <SnippetTypes>

        <SnippetType>Expansion</SnippetType>

      </SnippetTypes>

    </Header>

    <Snippet>

      <Declarations>

        <Literal>

          <ID>returnType</ID>

          <ToolTip>Return type</ToolTip>

          <Default>Int32</Default>

        </Literal>

        <Literal>

          <ID>param</ID>

          <ToolTip>Parameter</ToolTip>

          <Default>value</Default>

        </Literal>

        <Literal>

          <ID>dBConvertType</ID>

          <ToolTip>Converting Data Type For DB.</ToolTip>

          <Default>ToInt32</Default>

        </Literal>

      </Declarations>

      <Code Language="csharp">

        <![CDATA[ 

       /// <summary> 
       /// Insert Update Statement.
       /// </summary> 
        
        public static $returnType$ InsertOrUpdate($returnType$ $param$)
        {
            try
            {
                int id = 0;
                string sql = "[ST_InsertOrUpdate]";
                DbCommand cmd = db.GetStoredProcCommand(sql);
                db.AddInParameter(cmd, "NDTReqID", DbType.$dBConvertType$, Convert.ToInt32($param$));
                db.AddOutParameter(cmd, "ID", DbType.$dBConvertType$, id);
                db.ExecuteNonQuery(cmd);
                object x = db.GetParameterValue(cmd, "ID");
                if (x != null)
                {
                    if (Convert.$dBConvertType$(x) != -1)
                    {
                        return Convert.$dBConvertType$(x);
                    }
                    else
                    {
                        return Convert.$dBConvertType$(x);
                    }
                }
                else
                {
                    return -1;
                }
            }
            catch (Exception ex)
            {
                string strError = ex.Message.ToString();
                return -1;
            }
        }
        $end$]]>

      </Code>

    </Snippet>

  </CodeSnippet>

</CodeSnippets>